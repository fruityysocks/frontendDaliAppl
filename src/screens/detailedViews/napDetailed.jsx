import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router';
import useStore from '../../store/useStore';
import './detailed.scss';

export default function NapDetail() {
  const params = useParams();
  const { napId } = params;
  const [replyText, setReplyText] = useState('');
  const nap = useStore((s) => s.napSlice.selected);
  const fetchNapById = useStore((s) => s.napSlice.fetchNapById);
  const addReply = useStore((s) => s.napSlice.addReply);

  useEffect(() => {
    fetchNapById(napId);
  }, [napId, nap]);

  if (!nap) return <p>Loading...</p>;

  const base64String = nap.imageFile.data;
  const { contentType } = nap.imageFile;
  const imageSrc = `data:${contentType};base64,${base64String}`;
  const { replies } = nap;

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!replyText.trim()) return;

    try {
      await addReply(napId, replyText);
      setReplyText('');
    } catch (error) {
      console.error('Failed to add reply:', error);
    }
  };
  return (
    <div className="napDetail">
      <div className="napPic">
        <img src={imageSrc} alt="nap" className="napPicture" />
      </div>
      <div className="info">
        {nap.generatedPoem && (
          <div className="poem">
            <p>{nap.generatedPoem}</p>
          </div>
        )}

        <div className="data">
          {nap.generatedPoem && (
          <p className="bot">â€”nap poetry generated by napBot</p>)}

          <p className="username">ğŸ“¸: {nap.username}</p>
        </div>
        <div className="replies">
          {replies.length === 0 ? (
            <p>no replies yet</p>
          ) : (replies.map((reply) => (
            <p key={reply.id}>{reply.message}</p>
          )))}
          <div id="addReply">
            <form id="addReply" onSubmit={handleSubmit}>
              <input
                type="text"
                name="reply"
                placeholder="add a reply!"
                required
                value={replyText}
                onChange={(e) => setReplyText(e.target.value)}
              />
              <button type="submit" className="submit">submit</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  );
}
